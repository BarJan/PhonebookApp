[{"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\index.js":"1","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\reportWebVitals.js":"2","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\App\\App.jsx":"3","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\components\\SampleComponent.jsx":"4","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\MainPage\\MainPage.jsx":"5","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\components\\SmContactCard.jsx":"6","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\models\\ContactModel.js":"7","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\components\\PhonebookNav.jsx":"8","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\components\\LgContactCard.jsx":"9"},{"size":551,"mtime":1611174747003,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":283,"mtime":1611181548563,"results":"13","hashOfConfig":"11"},{"size":171,"mtime":1611096330844,"results":"14","hashOfConfig":"11"},{"size":1681,"mtime":1611187542918,"results":"15","hashOfConfig":"11"},{"size":502,"mtime":1611182349553,"results":"16","hashOfConfig":"11"},{"size":882,"mtime":1611183952166,"results":"17","hashOfConfig":"11"},{"size":1118,"mtime":1611178264342,"results":"18","hashOfConfig":"11"},{"size":592,"mtime":1611182398163,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qjvkud",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\index.js",[],["42","43"],"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\reportWebVitals.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\App\\App.jsx",[],"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\components\\SampleComponent.jsx",[],["44","45"],"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\MainPage\\MainPage.jsx",["46"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport LgContactCard from \"../components/LgContactCard\";\r\nimport SmContactCard from \"../components/SmContactCard\";\r\nimport ContactModel from \"../models/ContactModel\";\r\n\r\nfunction MainPage(){\r\n\r\n    const [contact,setContact] = useState(new ContactModel({id: 1992,name: \"bar janah\", username: \"barjan\", email: \"bla@gmail.com\", address: {street: \"hertzel\", suite: \"865\", city: \"TLV\", geo: {lat: \"34.5456\", lng: \"34.5456\"}}, phone: \"0525252522\", website: \"httpblabla.com\", company: {name:\"vla\", catchPhrase: \"blaPhrase\", bs: \"bs\"}}));\r\n    const [renderDetails, setRenderDetails] = useState(false);\r\n    let test;\r\n    useEffect(() => {\r\n        axios.get('/api/users').then(res=>{\r\n            document.write(res);\r\n            const contacts = res.data.map((contact)=> new ContactModel(contact));\r\n            test = contacts[0].name;\r\n            // const contacts = res.data.map((contact)=> new ContactModel(contact));\r\n            // setContact(contacts[0]);\r\n    });\r\n        // fetch(`/api/users`)\r\n        //     .then((response) => console.log(response));\r\n    },[])\r\n\r\n    function handleOpenClick(clickedContact){\r\n        setContact(clickedContact);\r\n        setRenderDetails(true);\r\n    }\r\n\r\n    function handleCloseClick(){\r\n        setRenderDetails(false);\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            {test ? \"yes\": \"no\"}\r\n            {renderDetails ? <LgContactCard contact={contact} onClick={handleCloseClick}/> : <SmContactCard contact={contact} onClick={handleOpenClick}/>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainPage;","C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\components\\SmContactCard.jsx",[],["47","48"],"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\models\\ContactModel.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\components\\PhonebookNav.jsx",[],"C:\\Users\\barjan\\Desktop\\front-end\\react.js-node.js-app\\phonebook-app\\src\\components\\LgContactCard.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":17,"column":20,"nodeType":"57","endLine":17,"endColumn":36},{"ruleId":"49","replacedBy":"58"},{"ruleId":"51","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],["60"],["61"],"react-hooks/exhaustive-deps","Assignments to the 'test' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression",["60"],["61"],"no-global-assign","no-unsafe-negation"]